// <auto-generated />
using System;
using Infra.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.DataAccess.Migrations
{
    [DbContext(typeof(MyApplicationDbContext))]
    [Migration("20220928124220_Creation_Tables__Paniers_et_Articles__avec_FK_de_nom_choisi_ET_NON_nullable_facon2")]
    partial class Creation_Tables__Paniers_et_Articles__avec_FK_de_nom_choisi_ET_NON_nullable_facon2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domaine.MyEntities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("My_PanierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("My_PanierId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Domaine.MyEntities.Bibliotheque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bibliotheques");
                });

            modelBuilder.Entity("Domaine.MyEntities.Garage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Garages");
                });

            modelBuilder.Entity("Domaine.MyEntities.Livre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BibliothequeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DatePublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BibliothequeId");

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("Domaine.MyEntities.Panier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paniers");
                });

            modelBuilder.Entity("Domaine.MyEntities.Passager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("My_TrainId_FK")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSecu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("My_TrainId_FK");

                    b.ToTable("Passagers");
                });

            modelBuilder.Entity("Domaine.MyEntities.Train", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trains");
                });

            modelBuilder.Entity("Domaine.MyEntities.Voiture", b =>
                {
                    b.Property<Guid>("Immatric")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GarageId")
                        .HasColumnType("int");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Immatric");

                    b.HasIndex("GarageId");

                    b.ToTable("Voitures");
                });

            modelBuilder.Entity("Domaine.MyEntities.Article", b =>
                {
                    b.HasOne("Domaine.MyEntities.Panier", "Panier")
                        .WithMany("Articles")
                        .HasForeignKey("My_PanierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Panier");
                });

            modelBuilder.Entity("Domaine.MyEntities.Livre", b =>
                {
                    b.HasOne("Domaine.MyEntities.Bibliotheque", null)
                        .WithMany("Livres")
                        .HasForeignKey("BibliothequeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domaine.MyEntities.Passager", b =>
                {
                    b.HasOne("Domaine.MyEntities.Train", "Train")
                        .WithMany("Passagers")
                        .HasForeignKey("My_TrainId_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Train");
                });

            modelBuilder.Entity("Domaine.MyEntities.Voiture", b =>
                {
                    b.HasOne("Domaine.MyEntities.Garage", null)
                        .WithMany("Voitures")
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domaine.MyEntities.Bibliotheque", b =>
                {
                    b.Navigation("Livres");
                });

            modelBuilder.Entity("Domaine.MyEntities.Garage", b =>
                {
                    b.Navigation("Voitures");
                });

            modelBuilder.Entity("Domaine.MyEntities.Panier", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("Domaine.MyEntities.Train", b =>
                {
                    b.Navigation("Passagers");
                });
#pragma warning restore 612, 618
        }
    }
}
